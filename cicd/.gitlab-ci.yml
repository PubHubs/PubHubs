variables:
  DOCKER_DRIVER: overlay # faster docker builds, see https://gitlab.com/gitlab-org/gitlab-ce/issues/21374

before_script:
  - if [ -n "${CI_COMMIT_TAG}" ]; then ENVIRONMENT=stable; fi
  - if [ -z "${ENVIRONMENT}" ]; then ENVIRONMENT="${CI_COMMIT_REF_NAME}"; fi
  - echo "Environment=${ENVIRONMENT}"
  - ENV_FILE="pubhubs/.${ENVIRONMENT}.env"
  - test -f ${ENV_FILE} && source ${ENV_FILE} # 'source ${ENV_FILE} || true' does not work on busybox

# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages: # List of stages for jobs, and their order of execution
  - tests
  - publish-images
  - deploy-own

rust-clippy:
  stage: tests
  tags:
    - docker
  image: registry.science.ru.nl/ilab/docker-build/rust-stable:main
  script:
    - cd pubhubs
    - cargo clippy -- --deny "warnings"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"

rust-unit-test:
  stage: tests
  tags:
    - docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  image: registry.science.ru.nl/ilab/docker-build/rust-stable:main
  script:
    - cd pubhubs
    - RUST_BACKTRACE=full RUST_LOG=pubhubs=debug cargo test

rust-cargo-deny:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags:
    - docker
  image: registry.science.ru.nl/ilab/docker-build/rust-stable:main
  script:
    - cd pubhubs
    - cargo deny check

build-pubhubs-image:
  stage: publish-images
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs:${CI_COMMIT_REF_NAME}
    - if: $CI_COMMIT_TAG
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs:stable
  needs:
    - job: globalclient-format-check
      optional: true
    - job: globalclient-unit-test
      optional: true
    - job: rust-unit-test
      optional: true
    - job: rust-cargo-deny
      optional: true
    - job: rust-clippy
      optional: true
  tags:
    - docker
  image: docker:latest
  script:
    - unset DOCKER_HOST
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # We want to describe our commit using the latest tag.  However, gitlab runners use a shallow clone of our repo,
    # which might not contain the latest tag, in which case `git describe --tags` fails.  In that case we fetch 
    # a bit more history until we hit our tag's commit.
    - until git describe --tags; do git fetch --deepen 10; done 
    - docker build --build-arg "CARGO_FEATURES=${CARGO_FEATURES}" -f pubhubs/Dockerfile -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

deploy-main-phc:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build-pubhubs-image
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-pubhubs-main

deploy-stable-phc:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - build-pubhubs-image
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-pubhubs-stable

deploy-main-phmss:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build-pubhubs-image
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-phmss-main

deploy-stable-phmss:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - build-pubhubs-image
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-phmss-stable

start-test-setup-unit-test:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags:
    - docker
  image: python:latest
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - python3 start_test_setup.py test

hub-unit-test: # This job runs in the test stage.
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags:
    - docker
  image: python:latest   # Python 3.11 version is used to fix the issue of failing test because synapse version 1.115.0 has issues with new twisted version.
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install unittest-xml-reporting
    - apt update && apt install -y lsb-release
  script:
    - cd pubhubs_hub
    - pip install --upgrade -r requirements.txt
    - python -m xmlrunner discover -p '*_test.py' --output-file report.xml
  artifacts:
    reports:
      junit: pubhubs_hub/report.xml
    expire_in: 1 week

build-image-hub:
  stage: publish-images
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_hub:${CI_COMMIT_REF_NAME}
    - if: $CI_COMMIT_TAG
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_hub:stable
  needs:
    - job: hub-unit-test
      optional: true
  tags:
    - docker
  image: docker:latest # docker:stable does not work, see https://gitlab.science.ru.nl/ilab/pubhubs_canonical/-/issues/228
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # We want to describe our commit using the latest tag.  However, gitlab runners use a shallow clone of our repo,
    # which might not contain the latest tag, in which case `git describe --tags` fails.  In that case we fetch 
    # a bit more history until we hit our tag's commit.
    - until git describe --tags; do git fetch --deepen 10; done 
    - docker build -t ${CONTAINER_IMAGE} -f pubhubs_hub/Dockerfile --build-arg HUB_VERSION="$(git describe --tags)" .
    - docker push ${CONTAINER_IMAGE}

deploy-main-hub:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build-image-hub
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs_hub
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-matrix-main

deploy-stable-hub:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_TAG
  needs: 
    - build-image-hub
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs_hub
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-matrix-stable
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-ruhub-matrix
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-tryouthub-matrix
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-open-source-dev-matrix

globalclient-format-check:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags: [docker]
  image: node:latest
  script:
    - cd hub-client
    - npm ci
    - cd ../global-client
    - npm ci
    - npx prettier ./src --check --ignore-unknown --config ./package.json
    - echo "see https://gitlab.science.ru.nl/ilab/pubhubs_canonical/-/wikis/Contributing/(re)format-client-code"

hubclient-format-check:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags: [docker]
  image: node:latest
  script:
    - cd hub-client
    - npm ci
    - npx prettier ./src --check --ignore-unknown --config ./package.json

globalclient-unit-test:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags: [docker]
  image: node:latest
  script:
    - cd hub-client
    - npm ci
    - cd ../global-client
    - npm ci --cache .npm --prefer-offline
    - npm run test

hubclient-unit-test:
  stage: tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "stable"
  tags: [docker]
  image: node:latest
  before_script:
    - cd hub-client
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run test

build-hubclient:
  stage: publish-images
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_client:${CI_COMMIT_REF_NAME}
    - if: $CI_COMMIT_TAG
      variables:
        CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_client:stable
  needs:
    - job: hubclient-format-check
      optional: true
    - job: hubclient-unit-test
      optional: true
  tags:
    - docker
  image: docker:latest
  script:
    - cd hub-client
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

deploy-main-hubclient:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs: &deployhubclientneeds
    - build-hubclient
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd hub-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-client-main

deploy-stable-client:
  stage: deploy-own
  rules:
    - if: $CI_COMMIT_TAG
  needs: *deployhubclientneeds
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd hub-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-client-stable
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-ruhub-client
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-tryouthub-client
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@ph.ihub.ru.nl -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-open-source-dev-client
